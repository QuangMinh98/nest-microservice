version: '3.7'

services:
    rabbitmq:
        # There is a prebuilt RabbitMQ image; see
        # https://hub.docker.com/_/rabbitmq/ for details.
        # This variant is built on Alpine Linux (it's smaller) and includes
        # the management UI.
        image: 'rabbitmq'

        # These ports are exposed on the host; 'hostport:containerport'.
        # You could connect to this server from outside with the *host's*
        # DNS name or IP address and port 5672 (the left-hand side of the
        # colon).
        ports:
        # The standard AMQP protocol port
        - '5673:5673'

        # Run this container on a private network for this application.
        # This is necessary for magic Docker DNS to work: other containers
        # also running on this network will see a host name "rabbitmq"
        # (the name of this section) and the internal port 5672, even though
        # that's not explicitly published above.
        networks:
        - backend

    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
        - "2181:2181"
        networks:
        - backend
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports:
        - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: "baeldung:1:1"
        networks:
        - backend

    apigateway:
        container_name: apigateway
        build: ./api-gateway
        env_file:
            - ./api-gateway/.env
        ports:
            - 3000:3000
        restart: always
        depends_on:
            - userservice
        networks:
            - backend
            
    userservice:
        container_name: userservice
        build: ./user-service
        env_file:
            - ./user-service/.env
        restart: always
        networks:
            - backend
            
    authservice:
        container_name: authservice
        build: ./auth-service
        env_file:
            - ./auth-service/.env
        restart: always
        networks:
            - backend

networks:
  backend:
    driver: bridge
    external: true